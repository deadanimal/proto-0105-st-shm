{"version":3,"sources":["/Users/muhdraziman/Downloads/proto-0105-st-shm/node_modules/ngx-siema/siema.component.js"],"names":[],"mappings":"AAAA;;;;;;;;AAGA;;;;;;;;;;;;;;;;;gDAEK;;;kCAG6B,AAShC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAmMI;;;6BAGuB,AAM3B","file":"siema.component.js","sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport Siema from 'siema';\nimport { NgxSiemaService } from './siema.service';\nvar NgxSiemaSlideComponent = (function () {\n    function NgxSiemaSlideComponent() {\n    }\n    return NgxSiemaSlideComponent;\n}());\nexport { NgxSiemaSlideComponent };\nNgxSiemaSlideComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'ngx-siema-slide',\n                styles: [\n                    \"\\n      :host {\\n        display: flex;\\n      }\\n    \",\n                ],\n                template: \"\\n    <ng-content></ng-content>\\n  \",\n            },] },\n];\nNgxSiemaSlideComponent.ctorParameters = function () { return []; };\nvar NgxSiemaComponent = (function () {\n    function NgxSiemaComponent(ngxSiemaService) {\n        this.ngxSiemaService = ngxSiemaService;\n        this.next = new EventEmitter();\n        this.prev = new EventEmitter();\n        this.goTo = new EventEmitter();\n        this.remove = new EventEmitter();\n        this.insert = new EventEmitter();\n        this.prepend = new EventEmitter();\n        this.append = new EventEmitter();\n        this.destroy = new EventEmitter();\n        this.currentSlide = new EventEmitter();\n    }\n    NgxSiemaComponent.prototype.ngAfterViewInit = function () {\n        this.instance = new Siema(this.options);\n    };\n    NgxSiemaComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.ngxClass = this.options.selector.replace('.', '');\n        this.nextSubscription = this.ngxSiemaService.onNext()\n            .subscribe(function (data) {\n            if (_this.compareSelectors(data.selector) && _this.instance) {\n                _this.instance.next(data.numbers, function () {\n                    _this.next.emit({\n                        selector: _this.options.selector,\n                        currentSlide: _this.instance.currentSlide,\n                    });\n                    data.listener.next({ selector: _this.options.selector, currentSlide: _this.instance.currentSlide });\n                });\n            }\n        });\n        this.prevSubscription = this.ngxSiemaService.onPrev()\n            .subscribe(function (data) {\n            if (_this.compareSelectors(data.selector) && _this.instance) {\n                _this.instance.prev(data.numbers, function () {\n                    _this.prev.emit({\n                        selector: _this.options.selector,\n                        currentSlide: _this.instance.currentSlide,\n                    });\n                    data.listener.next({ selector: _this.options.selector, currentSlide: _this.instance.currentSlide });\n                });\n            }\n        });\n        this.goToSubscription = this.ngxSiemaService.onGoTo()\n            .subscribe(function (data) {\n            if (_this.compareSelectors(data.selector) && _this.instance) {\n                _this.instance.goTo(data.index, function () {\n                    _this.goTo.emit({\n                        selector: _this.options.selector,\n                        currentSlide: _this.instance.currentSlide,\n                    });\n                    data.listener.next({ selector: _this.options.selector, currentSlide: _this.instance.currentSlide });\n                });\n            }\n        });\n        this.removeSubscription = this.ngxSiemaService.onRemove()\n            .subscribe(function (data) {\n            if (_this.compareSelectors(data.selector) && _this.instance) {\n                _this.instance.remove(data.index, function () {\n                    _this.remove.emit({\n                        selector: _this.options.selector,\n                        currentSlide: _this.instance.currentSlide,\n                    });\n                    data.listener.next({ selector: _this.options.selector, currentSlide: _this.instance.currentSlide });\n                });\n            }\n        });\n        this.insertSubscription = this.ngxSiemaService.onInsert()\n            .subscribe(function (data) {\n            if (_this.compareSelectors(data.selector) && _this.instance) {\n                _this.instance.insert(data.item, data.index, function () {\n                    _this.insert.emit({\n                        selector: _this.options.selector,\n                        currentSlide: _this.instance.currentSlide,\n                    });\n                    data.listener.next({ selector: _this.options.selector, currentSlide: _this.instance.currentSlide });\n                });\n            }\n        });\n        this.prependSubscription = this.ngxSiemaService.onPrepend()\n            .subscribe(function (data) {\n            if (_this.compareSelectors(data.selector) && _this.instance) {\n                _this.instance.prepend(data.item, function () {\n                    _this.prepend.emit({\n                        selector: _this.options.selector,\n                        currentSlide: _this.instance.currentSlide,\n                    });\n                    data.listener.next({ selector: _this.options.selector, currentSlide: _this.instance.currentSlide });\n                });\n            }\n        });\n        this.appendSubscription = this.ngxSiemaService.onAppend()\n            .subscribe(function (data) {\n            if (_this.compareSelectors(data.selector) && _this.instance) {\n                _this.instance.append(data.item, function () {\n                    _this.append.emit({\n                        selector: _this.options.selector,\n                        currentSlide: _this.instance.currentSlide,\n                    });\n                    data.listener.next({ selector: _this.options.selector, currentSlide: _this.instance.currentSlide });\n                });\n            }\n        });\n        this.destroySubscription = this.ngxSiemaService.onDestroy()\n            .subscribe(function (data) {\n            if (_this.compareSelectors(data.selector) && _this.instance) {\n                _this.instance.destroy(data.restoreMarkup, function () {\n                    _this.destroy.emit({\n                        selector: _this.options.selector,\n                    });\n                    data.listener.next({ selector: _this.options.selector });\n                });\n            }\n        });\n        this.currentSlideSubscription = this.ngxSiemaService.onCurrentSlide()\n            .subscribe(function (data) {\n            if (_this.compareSelectors(data.selector) && _this.instance) {\n                _this.currentSlide.emit({\n                    selector: _this.options.selector,\n                    currentSlide: _this.instance.currentSlide,\n                });\n                data.listener.next({ selector: _this.options.selector, currentSlide: _this.instance.currentSlide });\n            }\n        });\n    };\n    NgxSiemaComponent.prototype.ngOnDestroy = function () {\n        var _this = this;\n        if (this.instance) {\n            setTimeout(function () {\n                _this.instance.destroy();\n                _this.instance = null;\n            });\n        }\n        this.nextSubscription.unsubscribe();\n        this.prevSubscription.unsubscribe();\n        this.goToSubscription.unsubscribe();\n        this.removeSubscription.unsubscribe();\n        this.insertSubscription.unsubscribe();\n        this.prependSubscription.unsubscribe();\n        this.appendSubscription.unsubscribe();\n        this.destroySubscription.unsubscribe();\n        this.currentSlideSubscription.unsubscribe();\n    };\n    NgxSiemaComponent.prototype.onNext = function (numbers) {\n        if (numbers === void 0) { numbers = 1; }\n        this.instance.next(numbers, this.next.emit({\n            currentSlide: this.instance.currentSlide,\n        }));\n    };\n    NgxSiemaComponent.prototype.onPrev = function (numbers) {\n        if (numbers === void 0) { numbers = 1; }\n        this.instance.prev(numbers, this.next.emit({\n            currentSlide: this.instance.currentSlide,\n        }));\n    };\n    NgxSiemaComponent.prototype.onGoTo = function (index) {\n        this.instance.goTo(index, this.goTo.emit({\n            currentSlide: this.instance.currentSlide,\n        }));\n    };\n    NgxSiemaComponent.prototype.onRemove = function (index) {\n        this.instance.remove(index, this.remove.emit({\n            currentSlide: this.instance.currentSlide,\n        }));\n    };\n    NgxSiemaComponent.prototype.onInsert = function (item, index) {\n        this.instance.insert(item, index, this.insert.emit({\n            currentSlide: this.instance.currentSlide,\n        }));\n    };\n    NgxSiemaComponent.prototype.onPrepend = function (item) {\n        this.instance.prepend(item, this.prepend.emit({\n            currentSlide: this.instance.currentSlide,\n        }));\n    };\n    NgxSiemaComponent.prototype.onAppend = function (item) {\n        this.instance.append(item, this.append.emit({\n            currentSlide: this.instance.currentSlide,\n        }));\n    };\n    NgxSiemaComponent.prototype.onDestroy = function (restoreMarkup) {\n        if (restoreMarkup === void 0) { restoreMarkup = false; }\n        this.instance.destroy(restoreMarkup, this.destroy.emit({\n            currentSlide: this.instance.currentSlide,\n        }));\n    };\n    NgxSiemaComponent.prototype.onCurrentSlide = function () {\n        this.currentSlide.emit({\n            currentSlide: this.instance.currentSlide,\n        });\n    };\n    NgxSiemaComponent.prototype.compareSelectors = function (selector) {\n        return !selector || selector === this.options.selector;\n    };\n    return NgxSiemaComponent;\n}());\nexport { NgxSiemaComponent };\nNgxSiemaComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'ngx-siema',\n                template: \"\\n    <div class=\\\"{{ ngxClass }}\\\">\\n      <ng-content select=\\\"ngx-siema-slide\\\"></ng-content>\\n    </div>\\n  \",\n            },] },\n];\nNgxSiemaComponent.ctorParameters = function () { return [\n    { type: NgxSiemaService, },\n]; };\nNgxSiemaComponent.propDecorators = {\n    'options': [{ type: Input },],\n    'next': [{ type: Output },],\n    'prev': [{ type: Output },],\n    'goTo': [{ type: Output },],\n    'remove': [{ type: Output },],\n    'insert': [{ type: Output },],\n    'prepend': [{ type: Output },],\n    'append': [{ type: Output },],\n    'destroy': [{ type: Output },],\n    'currentSlide': [{ type: Output },],\n};\n"]}